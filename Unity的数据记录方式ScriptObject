在Unity3D中，我们记录游戏的配置数据可以使用文件文件（XML、JSON等格式），也可以使用二进制文件（自定义格式），
两种方式都需要自己进行解析，而Unity比较贴心，为我们提供了另外一种格式的数据记录方式，就是ScriptableObject。


面对游戏中经常需要使用的序列化数据，通常的做法就是把数据【SerializeField】，然后再视图面板中修改数值，此举大大方便了策划调整数值。
不过还有一个很明显的缺点，就是序列化数据直接保存在Scene中，每次修改Scene.unity，多人合作时，场景文件很容易发生冲突。





ScriptObject:

优点：
1）除了支持float,int,string等常见类型，还需要支持List等复杂数据，最重要的是支持Unity的Vector3等数据
2）文件可以在Unity中直接编辑

Unity3d的数据持久化（序列化）的主要方式除了自定义的配置文件【xml或者json】，更加便捷的放回寺就是使用Unity的序列化机制。

脚本中MonoBehaviour定义的公共变量或者标记为Serialized的私有变量会持久化保存。

//  ********************************************************        //

基础知识：
1）将数据存储在资源文件之中，和普通资源类似，退出也会保存修改
2）继承自UnityEngine.Object，不必附着在对象上，也不要赋给GameObject或者Prefab
3)可以被serialized，可以在资源面板创建assert，把数据存储在资源文件中，通过属性面板直接修改数值





应用场景：
1）数据对象和表格数据

在Asserts下创建.assert文件并且可以在编辑面板中编辑修改。
常用于本地化数据，清单目录，表格，敌人配置等。

但是ScriptObject只有一份，不能包括时刻变化的数据




























